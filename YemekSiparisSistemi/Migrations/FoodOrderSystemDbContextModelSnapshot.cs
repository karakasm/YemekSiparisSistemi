// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YemekSiparisSistemi.Models;

#nullable disable

namespace YemekSiparisSistemi.Migrations
{
    [DbContext(typeof(FoodOrderSystemDbContext))]
    partial class FoodOrderSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AddressUser", b =>
                {
                    b.Property<int>("AdresId")
                        .HasColumnType("int")
                        .HasColumnName("adres_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("AdresId", "UserId")
                        .HasName("pk_address_user");

                    b.HasIndex("UserId");

                    b.ToTable("address_user", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("apartment_name");

                    b.Property<byte?>("ApartmentNumber")
                        .HasColumnType("tinyint")
                        .HasColumnName("apartment_number");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<string>("Floor")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("floor");

                    b.Property<string>("Neighbourhood")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("neighbourhood");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("postal_code");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int")
                        .HasColumnName("province_id");

                    b.Property<string>("Street")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("street");

                    b.Property<string>("Tag")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("tag");

                    b.HasKey("Id")
                        .HasName("pk_address");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("card_name");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("card_number");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_card");

                    b.HasIndex("UserId");

                    b.ToTable("card", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("category_name");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.HasKey("Id")
                        .HasName("pk_category");

                    b.HasIndex("CompanyId");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment1")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_comment");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company_name");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_company");

                    b.HasIndex("AddressId");

                    b.HasIndex(new[] { "Email" }, "UQ__company__AB6E616437FB4CE1")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__company__B43B145F5650532F")
                        .IsUnique();

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("phone");

                    b.Property<string>("Surname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_courier");

                    b.HasIndex("CompanyId");

                    b.HasIndex(new[] { "Phone" }, "UQ__courier__B43B145FA4C1909B")
                        .IsUnique();

                    b.ToTable("courier", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("arrival_date");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<int?>("CourierId")
                        .HasColumnType("int")
                        .HasColumnName("courier_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("release_date");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_id");

                    b.HasKey("Id")
                        .HasName("pk_delivery");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CourierId");

                    b.HasIndex("OrderId");

                    b.HasIndex("StatusId");

                    b.ToTable("delivery", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.DeliveryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status_name");

                    b.HasKey("Id")
                        .HasName("pk_deliveryStatus");

                    b.ToTable("delivery_status", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("district_name");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_district");

                    b.HasIndex("ProvinceId");

                    b.ToTable("district", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("Detail")
                        .HasColumnType("text")
                        .HasColumnName("detail");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image")
                        .HasColumnName("image");

                    b.Property<string>("MenuName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("menu_name");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("smallmoney")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("pk_menu");

                    b.HasIndex("CompanyId");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.MenuProduct", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint")
                        .HasColumnName("quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("smallmoney")
                        .HasColumnName("unit_price");

                    b.HasKey("MenuId", "ProductId")
                        .HasName("pk_menuProduct");

                    b.HasIndex("ProductId");

                    b.ToTable("menu_product", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("address_id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("created_at");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int")
                        .HasColumnName("payment_type");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("smallmoney")
                        .HasColumnName("total_price");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_order");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PaymentType");

                    b.HasIndex("UserId");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<byte?>("Quantity")
                        .HasColumnType("tinyint")
                        .HasColumnName("quantity");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("pk_orderProduct");

                    b.HasIndex("ProductId");

                    b.ToTable("order_product", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Payment", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<byte[]>("Date")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("date");

                    b.Property<int?>("PaymentType")
                        .HasColumnType("int")
                        .HasColumnName("payment_type");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("smallmoney")
                        .HasColumnName("total_amount");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("pk_payment");

                    b.HasIndex("PaymentType");

                    b.HasIndex("UserId");

                    b.ToTable("payment", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_name");

                    b.HasKey("Id")
                        .HasName("pk_paymentType");

                    b.ToTable("payment_type", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("company_id");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("content");

                    b.Property<byte[]>("ProductImage")
                        .IsRequired()
                        .HasColumnType("image")
                        .HasColumnName("product_image");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("smallmoney")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("pk_product");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("province_name");

                    b.HasKey("Id")
                        .HasName("pk_province");

                    b.ToTable("province", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("role_name");

                    b.HasKey("Id")
                        .HasName("pk_role");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("phone");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__user__AB6E616439597CA0")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UQ__user__B43B145FADB83BDB")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("AddressUser", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Address", null)
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addressUser_address");

                    b.HasOne("YemekSiparisSistemi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addressUser_user");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Address", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_address_district");

                    b.HasOne("YemekSiparisSistemi.Models.Province", "Province")
                        .WithMany("Addresses")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_address_province");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Card", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_card_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Category", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Categories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_category_company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Comment", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Comments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_comment_company");

                    b.HasOne("YemekSiparisSistemi.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_comment_user");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Company", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Address", "Address")
                        .WithMany("Companies")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_company_address");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Courier", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Couriers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_courier_company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Delivery", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Address", "Address")
                        .WithMany("Deliveries")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_delivery_address");

                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Deliveries")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_delivery_company");

                    b.HasOne("YemekSiparisSistemi.Models.Courier", "Courier")
                        .WithMany("Deliveries")
                        .HasForeignKey("CourierId")
                        .HasConstraintName("fk_delivery_courier");

                    b.HasOne("YemekSiparisSistemi.Models.Order", "Order")
                        .WithMany("Deliveries")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_delivery_order");

                    b.HasOne("YemekSiparisSistemi.Models.DeliveryStatus", "Status")
                        .WithMany("Deliveries")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("fk_delivery_deliveryStatus");

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("Courier");

                    b.Navigation("Order");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.District", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Menu", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Menus")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menu_company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.MenuProduct", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Menu", "Menu")
                        .WithMany("MenuProducts")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menuProduct_menu");

                    b.HasOne("YemekSiparisSistemi.Models.Product", "Product")
                        .WithMany("MenuProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("fk_menuProduct_product");

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Order", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("fk_order_address");

                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_order_company");

                    b.HasOne("YemekSiparisSistemi.Models.PaymentType", "PaymentTypeNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentType")
                        .IsRequired()
                        .HasConstraintName("fk_order_paymentType");

                    b.HasOne("YemekSiparisSistemi.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_order_user");

                    b.Navigation("Address");

                    b.Navigation("Company");

                    b.Navigation("PaymentTypeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.OrderProduct", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderProduct_order");

                    b.HasOne("YemekSiparisSistemi.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("fk_orderProduct_product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Payment", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("YemekSiparisSistemi.Models.Payment", "OrderId")
                        .IsRequired()
                        .HasConstraintName("fk_payment_order");

                    b.HasOne("YemekSiparisSistemi.Models.PaymentType", "PaymentTypeNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentType")
                        .HasConstraintName("fk_payment_paymentType");

                    b.HasOne("YemekSiparisSistemi.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_payment_user");

                    b.Navigation("Order");

                    b.Navigation("PaymentTypeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Product", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_product_category");

                    b.HasOne("YemekSiparisSistemi.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_product_company");

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.User", b =>
                {
                    b.HasOne("YemekSiparisSistemi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_user_role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Address", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Deliveries");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Company", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Comments");

                    b.Navigation("Couriers");

                    b.Navigation("Deliveries");

                    b.Navigation("Menus");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Courier", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.DeliveryStatus", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.District", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Menu", b =>
                {
                    b.Navigation("MenuProducts");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Order", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("OrderProducts");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.PaymentType", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Product", b =>
                {
                    b.Navigation("MenuProducts");

                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Province", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("YemekSiparisSistemi.Models.User", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
